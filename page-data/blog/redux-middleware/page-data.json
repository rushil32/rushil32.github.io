{"componentChunkName":"component---src-templates-blog-template-js","path":"/blog/redux-middleware","webpackCompilationHash":"a7bf5c9e1b033831d272","result":{"data":{"markdownRemark":{"html":"<h2>What is middleware</h2>\n<p>Middleware is some code you can put between a framework receiving a request, and the framework generating a response. For example, Express or Koa middleware may add CORS headers, logging, compression, and more. The best feature of middleware is that it's composable in a chain. You can use multiple independent third-party middleware in a single project.</p>\n<p>Recieves request => Middlware => Generate Response</p>\n<p>--split--</p>\n<h2>Redux middleware</h2>\n<p>Redux middleware solves different problems than Express or Koa middleware, but in a conceptually similar way. It provides a third-party extension point between dispatching an action, and the moment it reaches the reducer. People use Redux middleware for logging, crash reporting, talking to an asynchronous API, routing, and more.</p>\n<p>Dispatch action => Middlware => Action handled by reducer</p>","frontmatter":{"date":"August 30, 2019","path":"/blog/redux-middleware","title":"Redux middleware","author":"Rushil Saraogi","category":"Redux"}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}